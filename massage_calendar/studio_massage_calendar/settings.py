"""
Django settings for studio_massage_calendar project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Base directory of the project.
BASE_DIR = Path(__file__).resolve().parent.parent

# Security settings.
SECRET_KEY = 'django-insecure-n9!n&)5uebxt4@e1urk0fq7suc2*ewf=9p8e%oyjr#8y@-4-5g'  # Keep this secret in production.
DEBUG = True  # Enable debugging mode (should be False in production).
ALLOWED_HOSTS = []  # Define allowed hosts for the application.

# Installed apps (default and custom).
INSTALLED_APPS = [
    'django.contrib.admin',  # Admin panel.
    'django.contrib.auth',  # Authentication framework.
    'django.contrib.contenttypes',  # Content type framework.
    'django.contrib.sessions',  # Session framework.
    'django.contrib.messages',  # Messaging framework.
    'django.contrib.staticfiles',  # Static file management.
    'rest_framework',  # Django REST framework.
    'users',  # Custom user application.
    'calendar_app',  # Calendar application.
    'corsheaders',  # Cross-Origin Resource Sharing middleware.
]

# Middleware configuration.
MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # Enable CORS support.
    'django.middleware.common.CommonMiddleware',  # Common HTTP middleware.
    'django.middleware.security.SecurityMiddleware',  # Security-related middleware.
    'django.contrib.sessions.middleware.SessionMiddleware',  # Session management.
    'django.middleware.common.CommonMiddleware',  # General middleware.
    'django.middleware.csrf.CsrfViewMiddleware',  # Cross-Site Request Forgery protection.
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Authentication handling.
    'django.contrib.messages.middleware.MessageMiddleware',  # Message framework.
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Protect against clickjacking.
]

# URL and WSGI configurations.
ROOT_URLCONF = 'studio_massage_calendar.urls'
WSGI_APPLICATION = 'studio_massage_calendar.wsgi.application'

# Template configuration.
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',  # Template engine.
        'DIRS': [],  # Additional directories for templates.
        'APP_DIRS': True,  # Auto-load templates from apps.
        'OPTIONS': {
            'context_processors': [  # Context processors for templates.
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Database configuration.
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',  # Use PostgreSQL database.
        'NAME': 'calendar_db',  # Database name.
        'USER': 'postgres',  # Database user.
        'PASSWORD': 'zaq1@WSX',  # Database password.
        'HOST': 'localhost',  # Database host.
        'PORT': '5432',  # Database port.
    }
}

# Password validation rules.
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},  # Avoid similar passwords.
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},  # Enforce minimum length.
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},  # Disallow common passwords.
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},  # Disallow numeric passwords.
]

# Localization settings.
LANGUAGE_CODE = 'en-us'  # Default language.
TIME_ZONE = 'UTC'  # Default timezone.
USE_I18N = True  # Enable internationalization.
USE_TZ = True  # Enable timezone support.

# CORS configuration.
CORS_ALLOW_ALL_ORIGINS = True  # Allow all origins (adjust for production).
CORS_ALLOW_CREDENTIALS = True  # Allow sending credentials.

# Static files configuration.
STATIC_URL = 'static/'  # URL path for static files.

# Primary key field type.
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'  # Use BigAutoField for primary keys.

# REST framework configuration.
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',  # Use JWT for authentication.
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',  # Default permission: authenticated users only.
    ],
}

# Custom user model.
AUTH_USER_MODEL = 'users.CustomUser'  # Replace the default user model with the custom one.
